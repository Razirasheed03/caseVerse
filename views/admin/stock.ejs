<%- include("../../views/partials/admin/header") %>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<section class="content-main">
  <div class="content-header d-flex flex-column flex-md-row justify-content-between align-items-center">
    <div class="mb-3 mb-md-0">
      <h2 class="content-title">Stock Management</h2>
      <p>Manage product stocks here.</p>
    </div>
  </div>

  <div class="card mb-4">
    <div class="card-header">
      <div class="row gx-3 gy-2">
        <div class="col-12 col-md-6">
          <div class="search-area mb-3">
            <!-- <form action="/admin/stock" method="get">
              <div class="input-group mb-3">
                <input 
                  id="searchStockInput"
                  type="text"
                  class="form-control"
                  placeholder="Search products by name or brand..."
                  aria-label="Search products"
                  name="search"
                  value="<%= locals.searchQuery || '' %>"
                />
                <button 
                  class="btn btn-primary" 
                  type="submit"
                >
                  Search
                </button>
              </div>
            </form> -->
          </div>
        </div>
      </div>
    </div>

    <div id="stockTableContainer" class="table-responsive">
      <table class="table table-hover">
        <thead>
          <tr>
            <th>Product Name</th>
            <th>Current Stock</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% products.forEach((product) => { %>
            <tr>
              <td><%= product.productName %></td>
              <td><%= product.quantity %></td>
              <td>
                <button class="btn btn-primary btn-sm" onclick="openAddStockModal('<%= product._id %>')">Add Stock</button>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Modal for Adding Stock -->
  <div class="modal fade" id="addStockModal" tabindex="-1" aria-labelledby="addStockModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addStockModalLabel">Add Stock</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="addStockForm">
            <input type="hidden" id="addStockProductId" name="productId">

            <div class="mb-3">
              <label for="addStockQuantity" class="form-label">Quantity</label>
              <input type="number" class="form-control" id="addStockQuantity" name="quantity" required> 
            </div>
            <button type="submit" class="btn btn-primary">Add Stock</button>
          </form>
        </div>
      </div>
    </div>
  </div>

</section>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script>
  function openAddStockModal(productId) {
    document.getElementById('addStockProductId').value = productId;
    new bootstrap.Modal(document.getElementById('addStockModal')).show();
  }

  document.getElementById('addStockForm').addEventListener('submit', async function (event) {
    event.preventDefault();

    try {
      const formData = new FormData(event.target);
      const formObject = Object.fromEntries(formData.entries());

      const response = await fetch('/admin/addStock', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formObject),
      });

      const data = await response.json();

      if (data.success) {
        Swal.fire({
                    title: "Stock Added",
                    text: "The stock has been successfully added",
                    icon: "success",
                    showConfirmButton: true, // Ensures the user has to manually close the alert
                }).then(() => {
                    location.reload();
      })
      } else {
        Swal.fire({
                    title: "Something went Wrong",
                    text: "Some problem in server",
                    icon: "error",
                    showConfirmButton: true, // Ensures the user has to manually close the alert
                }).then(() => {
                    location.reload();
      })
      }
    } catch (error) {
        Swal.fire({
                    title: "Something went Wrong",
                    text: "Some problem in catch",
                    icon: "error",
                    showConfirmButton: true, // Ensures the user has to manually close the alert
                }).then(() => {
                    location.reload();
      })
    }
  });
</script>

<!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

