<%- include("../../views/partials/user/header") %>
<br><br><br><br>
<style>
 .quantity-controls {
  display: flex;
  align-items: center;
  justify-content: center;
}

.quantity-input {
  width: 20px;
  text-align: center;
  padding: 0px;
  font-size: 16px;
  /* border: 1px solid #ccc; */
  /* background-color: #f9f9f9; */
  font-weight: bold;
}

.increment-btn,
.decrement-btn {
  background-color: #ffffff;
  color: rgb(0, 0, 0);
  font-weight: bold;
  padding: 8px 12px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  font-size: 18px;
}

/* .increment-btn:hover,
.decrement-btn:hover {
  background-color: #bfbfbf;
} */

.increment-btn:active,
.decrement-btn:active {
  transform: scale(0.95);
}

.quantity-controls button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
}


  .couponInput{
    color:rgb(0, 0, 0);
    border: 1px solid;
    border-radius: 10px;
  }
</style>
<nav>
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">Home</a></li>
    <li class="breadcrumb-item" aria-current="page">Cart</li>
  </ol>
</nav>
<%-include("../../views/partials/user/couponModal")%>


<form class="bg0 p-t-75 p-b-85" method="POST" action="/update-cart">
  <div class="container">
    <div class="row">
      <div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
        <div class="m-l-25 m-r--38 m-lr-0-xl">
          <div class="wrap-table-shopping-cart">
            <table class="table-shopping-cart">
              <tr class="table_head">
                <th class="column-1">Product</th>
                <th class="column-2">Name</th>
                <th class="column-3">Price</th>
                <th class="column-4">Quantity</th>
                <th class="column-5">Total</th>
                <th class="column-6">Action</th>
              </tr>

              <% if (cart.items.length > 0) { %>
                <% cart.items.forEach(item => { %>
                  <tr class="table_row">
                    <td class="column-1">
                      <div class="how-itemcart1">
                        <img src="/uploads/product-images/<%= item.productId.productImage[0] %>" alt="IMG">
                      </div>
                    </td>
                    <td class="column-2"><%= item.productId.productName %></td>
                    <td class="column-3">₹<%= item.price %></td>



                    <td class="column-4">
                      <div class="quantity-controls">
                        <button type="button" onclick="quantityChange(-1, '<%=item._id%>')" class="decrement-btn">-</button>
                        <input type="number" name="quantity[<%= item._id %>]" value="<%= item.quantity %>" class="quantity-input" min="1" max="10" data-price="<%= item.price %>" data-item-id="<%= item._id %>" readonly>
                        <button type="button" onclick="quantityChange(1, '<%=item._id%>')" class="increment-btn">+</button>
                      </div>
                    </td>
                    
                    
                    
                    <td class="column-5">₹<span class="total-price" data-item-id="<%= item._id %>"><%= item.totalPrice %></span></td>
                    <td class="column-6">
                      <button type="button" class="btn btn-danger" onclick="confirmRemove('<%= item._id %>')">Remove</button>

                    </td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="6">Your cart is empty.</td>
                </tr>
              <% } %>

            </table>
          </div>

          <!-- Cart Totals and Actions -->
          <div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">
          </div>
        </div>
      </div>

      <div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50">
        <div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm">
          <h4 class="mtext-109 cl2 p-b-30">Cart Totals</h4>
        
          <!-- Subtotal -->
          <div class="flex-w flex-t p-b-13">
            <div class="size-208">
              <span class="stext-110 cl2">Subtotal:</span>
            </div>
            <div class="size-209">
              <span class="mtext-110 cl2" id="subtotal">₹ <%= subtotal.toFixed(2) %></span>
            </div>
          </div>
        
          <!-- Shipping Charge -->
          <div class="flex-w flex-t bor12 p-b-13">
            <div class="size-208">
              <span class="stext-110 cl2">Shipping Charge:</span>
            </div>
            <div class="size-209">
              <span class="mtext-110 cl2" id="shipping">
                <% if (subtotal > 499) { %>
                  Free
                <% } else { %>
                  ₹ 40.00
                <% } %>
              </span>
            </div>
          </div>
        
          <!-- Total -->
          <div class="flex-w flex-t p-t-27 p-b-33">
            <div class="size-208">
              <span class="mtext-101 cl2">Total:</span>
            </div>
            <div class="size-209 p-t-1">
              <span class="mtext-110 cl2" id="total">₹ <% if (subtotal > 499 || subtotal==0) { %>
                <%= totalPrice.toFixed(2) %>
              <% } else { %>
                <%= 40+Number(totalPrice.toFixed(2)) %>
              <% } %> </span>
            </div>
          </div>
          
          <button class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer">
            <a href="/checkout">Proceed to Checkout</a>
          </button>
        </div>
        
        
        </div>
      </div>
    </div>
  </div>
</form>

<!-- Back to top -->
<div class="btn-back-to-top" id="myBtn">
  <span class="symbol-btn-back-to-top">
    <i class="zmdi zmdi-chevron-up"></i>
  </span>
</div>

<%- include("../../views/partials/user/footer") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script src="/js/main.js"></script>
<script>
async function confirmRemove(itemId) {
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to remove this item from the cart?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, remove it!',
        cancelButtonText: 'No, keep it',
    });

    if (result.isConfirmed) {
        // If confirmed, submit the form to remove the item
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/update-cart';
        
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'removeItem';
        input.value = itemId;
        
        form.appendChild(input);
        document.body.appendChild(form);
        form.submit();
    }
}


async function quantityChange(change, id) {
    const input = document.querySelector(`input[name="quantity[${id}]"]`);
    const currentQuantity = parseInt(input.value, 10);
    const price = parseFloat(input.dataset.price);
    const newQuantity = currentQuantity + change;

    if (newQuantity < 1) {
        alert("Quantity must be at least 1.");
        return;
    }

    try {
        // Send updated quantity to server and check response
        const response = await fetch(`/quantityChange`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ quantity: newQuantity, id }),
        });

        const result = await response.json();

        if (response.ok) {
            // Update the quantity and total price dynamically on success
            input.value = newQuantity;

            const totalPrice = newQuantity * price;
            document.querySelector(`.total-price[data-item-id="${id}"]`).textContent = totalPrice.toFixed(2);

            // Update cart totals
            updateCartTotals();
        } else {
            // Handle stock exceed or max limit errors
            if (result.error === "Stock exceed") {
                alert("Product stock exceeded.");
            } else if (result.error.includes("Maximum limit")) {
                alert(result.error); // Message includes the dynamic max limit
            } else {
                alert(result.error || "Unable to update quantity.");
            }
        }
    } catch (error) {
        console.error("Error updating quantity:", error);
        alert("An error occurred. Please try again.");
    }
}


  function updateCartTotals() {
    let subtotal = 0;
    document.querySelectorAll('.total-price').forEach(item => {
      subtotal += parseFloat(item.textContent);
    });
  
    const total = subtotal;
    document.getElementById('subtotal').textContent = `₹ ${subtotal.toFixed(2)}`;
    document.getElementById('total').textContent =
      total > 499 || total === 0
        ? `₹ ${total.toFixed(2)}`
        : `₹ ${(total + 40).toFixed(2)}`;
  }
  
  </script>
  

