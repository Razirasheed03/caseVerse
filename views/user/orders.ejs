<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>CaseVerse Orders</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />

    <!-- Template CSS -->
    <link href="assets/css/main.css?v=1.1" rel="stylesheet" type="text/css" />
    <style>
        .pagination {
            margin-top: 20px;
            text-align: center;
        }

        .pagination a {
            padding: 10px 15px;
            margin: 0 5px;
            background-color: #007bff;
            color: #fff;
            border-radius: 5px;
            text-decoration: none;
        }

        .pagination a:hover {
            background-color: #0056b3;
        }

        .pagination span {
            padding: 10px 15px;
            margin: 0 5px;
        }

        .content-main {
            background: none;
            box-shadow: none;
            border: none;
        }

        .content-body {
            padding: 20px;
            background-color: #f8f9fa;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        h2.section-title {
            font-size: 24px;
            margin-bottom: 20px;
            color: #343a40;
            font-weight: 600;
        }

        .order-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #ffffff;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .order-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        .order-card h5 {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 10px;
        }

        .order-card p {
            font-size: 14px;
            color: #555;
        }

        .btn-view {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease-in-out;
        }

        .btn-view:hover {
            background-color: #0056b3;
        }

        .d-flex.flex-wrap {
            justify-content: flex-start;
        }

        .d-flex.align-items-center {
            background: #fff;
            padding: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(194, 3, 3, 0.1);
        }
    </style>
</head>
<%-include("../../views/partials/user/header")%>

    <body>
        <section class="content-main">
            <div class="content-header"></div>
            <div class="row gx-5">
                <%- include("../../views/partials/user/profileAside") %>
                    <div class="col-lg-9">
                        <section class="content-body">
                            <h2 class="section-title">Your Orders</h2>

                            <% if (orders && orders.length> 0) { %>
                                <% orders.forEach(order=> { %>
                                    <div class="order-card">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h5>Order Details</h5>
                                            <div class="ms-auto">

                                                <!-- Cancel Button -->
                                                <% if (order.status !=='Cancelled' && order.status !=='Returned' &&
                                                    order.status !=='Delivered' && order.status !=='Return Request Sent'
                                                    && order.status !=='Return Request Denied' ) { %>
                                                    <button id="cancel-btn-<%= order._id %>" class="btn btn-danger"
                                                        onclick="cancelOrder('<%= order._id %>')">
                                                        Cancel
                                                    </button>
                                                    <% } %>



                                                        <!-- Return Button -->
                                                        <% if (order.paymentStatus==='Pending' &&
                                                            order.paymentMethod==='razorpay' && order.status
                                                            !=='Cancelled' ) { %>
                                                            <button id="retryPaymentBtn_<%= order._id %>"
                                                                class="btn btn-secondary"
                                                                onclick="retryPayment('<%= order._id %>')">
                                                                Retry Payment
                                                            </button>
                                                            <% } %>

                                                                <% if (order.status==='Delivered' ) { %>
                                                                    <button id="return-btn-<%= order._id %>"
                                                                        class="btn btn-success"
                                                                        onclick="returnOrder('<%= order._id %>')">
                                                                        Return
                                                                    </button>
                                                                    <% } %>
                                            </div>
                                            <%if(order.paymentStatus==='Paid'){%>
                                                <button class="btn btn-success ms-2"
                                                    onclick="viewOrder('<%= order._id %>')">
                                                    Download Invoice
                                                </button>
                                                <% } %>
                                        </div>

                                        <div class="mt-4 d-flex flex-wrap">
                                            <% order.items.forEach(item=> { %>
                                                <div class="text-center me-3 mb-2" style="width: 200px;">
                                                    <!-- Image Container -->
                                                    <div
                                                        style="width: 150px; height: 150px; overflow: hidden; border-radius: 8px; margin: 0 auto;">
                                                        <img src="/uploads/re-Images/<%= item.productId.productImage[0] %>"
                                                            alt="<%= item.productId.productName %>"
                                                            style="width: 100%; height: 100%; object-fit: cover;">
                                                    </div>
                                                    <!-- Product Name -->
                                                    <p class="mt-4 font-sm">
                                                        <%= item.productId.productName %>
                                                    </p>
                                                    Quantity: <%= item.quantity %>
                                                </div>
                                                <% }) %>
                                        </div>
                                        <br>
                                        <div class="d-flex justify-content-between flex-wrap">
                                            <div style="flex: 1; min-width: 300px;">
                                                <p><strong>Order id:</strong> #<%= order.orderId %>
                                                </p>
                                                <p><strong>Date:</strong>
                                                    <%= new Date(order.createdAt).toLocaleDateString() %>
                                                </p>
                                                <p><strong>Order Status:</strong>
                                                    <%= order.status %>
                                                </p>
                                                <p><strong>Payment Status:</strong>
                                                    <%= order.paymentStatus %>
                                                </p>
                                                <p><strong>Payment Method:</strong>
                                                    <%= order.paymentMethod %>
                                                </p>
                                                <p><strong>Coupon Discount:</strong> â‚¹ <%= order.totalCouponDiscount %>
                                                </p>
                                            </div>
                                            <div style="flex: 1; min-width: 300px; text-align: left;">
                                                <div class="order-address">
                                                    <p><strong>Shipping Address:</strong></p>
                                                    <p>
                                                        Name: <%= order.address.name %><br>
                                                            Address: <%= order.address.address %><br>
                                                                <%= order.address.city %>, <%= order.address.state %> -
                                                                        <%= order.address.pincode %><br>
                                                                            Phone: <%= order.address.phone %>
                                                    </p>
                                                    <p><strong>Total:</strong> â‚¹ <%= order.finalAmount %>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <% }) %>

                                        <div class="pagination">
                                            <% if (currentPage> 1) { %>
                                                <a href="?page=<%= currentPage - 1 %>">Previous</a>
                                                <% } %>

                                                    <span>Page <%= currentPage %> of <%= totalPages %></span>

                                                    <% if (currentPage < totalPages) { %>
                                                        <a href="?page=<%= currentPage + 1 %>">Next</a>
                                                        <% } %>
                                        </div>

                                        <% } else { %>
                                            <p>No orders found.</p>
                                            <% } %>
                        </section>
                    </div>

            </div>
        </section>
        <script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
        <script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
        <script src="assets/js/vendors/select2.min.js"></script>
        <script src="assets/js/vendors/perfect-scrollbar.js"></script>
        <script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
        <script src="assets/js/main.js?v=1.1" type="text/javascript"></script>
        <script>
            function viewOrder(orderId) {

                window.location.href = `/orderDetails/${orderId}`;
            }
        </script>
    </body>

</html>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
    async function retryPayment(orderId) {
        try {
            console.log('Retrying payment for orderId:', orderId); // Debugging

            const response = await fetch('/retryPayment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ orderId }),
            });

            const data = await response.json();
            console.log('Response from retryPayment:', data); // Debugging

            if (data.success) {
                const options = {
                    key: data.razorpayKey,
                    amount: data.totalAmount * 100,
                    currency: 'INR',
                    order_id: data.razorpayOrderId,
                    handler: async function (response) {
                        try {
                            const verifyResponse = await fetch('/verifyPayment', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_signature: response.razorpay_signature,
                                }),
                            });

                            const verifyData = await verifyResponse.json();

                            if (verifyData.success) {
                                window.location.href = '/orderComplete';
                            } else {
                                alert('Payment verification failed.');
                                window.location.href = '/orders'; // Redirect to orders page for retry
                            }
                        } catch (error) {
                            console.error('Error verifying payment:', error);
                            alert('An error occurred during payment verification.');
                            window.location.href = '/orders'; // Redirect to orders page for retry
                        }// ... (Existing handler code)
                    },
                    modal: {
                        ondismiss: function () {
                            Swal.fire({
                                icon: 'info',
                                title: 'Payment not completed',
                                text: 'You can retry payment from the orders page.',
                                showConfirmButton: true,
                            });
                        },
                    },
                };

                const razorpay = new Razorpay(options);
                razorpay.open();
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Retry Failed',
                    text: data.message || 'Unable to retry payment. Please contact support.',
                    showConfirmButton: true,
                });
            }
        } catch (error) {
            console.error('Error retrying payment:', error);
            Swal.fire({
                icon: 'error',
                title: 'Retry Failed',
                text: 'An unexpected error occurred. Please try again.',
                showConfirmButton: true,
            });
        }
    }

</script>
<script>
    async function viewOrder(orderId) {
        try {
            const response = await fetch(`/download-invoice/${orderId}`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/pdf',
                },
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            // Get the blob from the response
            const blob = await response.blob();

            // Create a URL for the blob
            const url = window.URL.createObjectURL(blob);

            // Create a temporary link element
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = `invoice-${orderId}.pdf`;

            // Add to document, click it, and remove it
            document.body.appendChild(a);
            a.click();

            // Clean up
            window.URL.revokeObjectURL(url);
            document.body.removeChild(a);

        } catch (error) {
            console.error("Error downloading invoice:", error);
            Swal.fire({
                title: 'Error',
                text: 'Failed to download invoice. Please try again.',
                icon: 'error'
            });
        }
    }


    async function cancelOrder(orderId) {
        try {

            // Displaying the confirmation with a text input for the reason
            const { value: reason } = await Swal.fire({
                title: "Are you sure?",
                text: "Do you really want to cancel this order? Please provide a reason.",
                icon: "warning",
                input: 'textarea',
                inputLabel: 'Cancellation Reason',
                inputPlaceholder: 'Enter reason for cancellation...',
                inputAttributes: {
                    'aria-label': 'Type your reason here'
                },
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, Cancel",
                cancelButtonText: "No"
            });
            if (reason) {

                const response = await fetch(`/cancelOrder/${orderId}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ reason }) // Send reason with the request
                });
                const result = await response.json();

                if (result.success) {
                    await Swal.fire({
                        title: "Order Cancelled",
                        text: "Your order has been cancelled.",
                        icon: "success"
                    });

                    const cancelButton = document.getElementById(`cancel-btn-${orderId}`);
                    const returnButton = document.getElementById(`return-btn-${orderId}`);
                    if (cancelButton) cancelButton.disabled = true;
                    if (returnButton) returnButton.disabled = true;
                    window.location.reload();
                } else {
                    console.error("Server error during cancellation:", result.message);
                    throw new Error(result.message);
                }
            } else {
                console.log("User did not provide a cancellation reason. Process aborted.");
            }
        } catch (err) {
            console.error("Error in cancelOrder function:", err.message);
            await Swal.fire("Oops!", "Internal server error occurred.", "error");
        }
    }


    async function returnOrder(orderId) {
        try {
            // Displaying the confirmation with a text input for the reason
            const { value: reason } = await Swal.fire({
                title: "Are you sure?",
                text: "Do you want to return this order? Please provide a reason.",
                icon: "question",
                input: 'textarea',
                inputLabel: 'Return Reason',
                inputPlaceholder: 'Enter reason for return...',
                inputAttributes: {
                    'aria-label': 'Type your reason here'
                },
                showCancelButton: true,
                confirmButtonColor: "#28a745",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, Return",
                cancelButtonText: "No"
            });

            // Proceed if the user provides a reason
            if (reason) {
                const response = await fetch(`/returnOrder/${orderId}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ reason }) // Send reason with the request
                });

                const result = await response.json();

                if (result.success) {
                    await Swal.fire({
                        title: "Return Request Sent",
                        text: "Your return request has been sent. Wait for confirmation.",
                        icon: "success"
                    });
                    const cancelButton = document.getElementById(`cancel-btn-${orderId}`);
                    const returnButton = document.getElementById(`return-btn-${orderId}`);
                    if (cancelButton) cancelButton.disabled = true;
                    if (returnButton) returnButton.disabled = true;

                    window.location.reload();
                } else {
                    throw new Error(result.message);
                }
            }
        } catch (err) {
            console.error('Error returning order:', err.message);
            await Swal.fire("Oops!", "Internal server error occurred.", "error");
        }
    }
</script>



<script src="vendor/jquery/jquery-3.2.1.min.js"></script>
<!--===============================================================================================-->
<script src="vendor/animsition/js/animsition.min.js"></script>
<!--===============================================================================================-->
<script src="vendor/bootstrap/js/popper.js"></script>
<script src="vendor/bootstrap/js/bootstrap.min.js"></script>
<!--===============================================================================================-->
<script src="vendor/select2/select2.min.js"></script>
<script>
    $(".js-select2").each(function () {
        $(this).select2({
            minimumResultsForSearch: 20,
            dropdownParent: $(this).next('.dropDownSelect2')
        });
    })
</script>
<!--===============================================================================================-->
<script src="vendor/MagnificPopup/jquery.magnific-popup.min.js"></script>
<!--===============================================================================================-->
<script src="vendor/perfect-scrollbar/perfect-scrollbar.min.js"></script>
<script>
    $('.js-pscroll').each(function () {
        $(this).css('position', 'relative');
        $(this).css('overflow', 'hidden');
        var ps = new PerfectScrollbar(this, {
            wheelSpeed: 1,
            scrollingThreshold: 1000,
            wheelPropagation: false,
        });

        $(window).on('resize', function () {
            ps.update();
        })
    });
</script>
<!--===============================================================================================-->
<script src="js/main.js"></script>